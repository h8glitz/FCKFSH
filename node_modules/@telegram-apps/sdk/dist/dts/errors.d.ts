export declare const CSSVarsBoundError: import('error-kid').CustomErrorClass<[]>, isCSSVarsBoundError: import('error-kid').IsErrorOfKindFn<Error>;
export declare const NotAvailableError: import('error-kid').CustomErrorClass<[message: string]>, isNotAvailableError: import('error-kid').IsErrorOfKindFn<Error>;
export declare const InvalidEnvError: import('error-kid').CustomErrorClass<[message?: string | undefined]>, isInvalidEnvError: import('error-kid').IsErrorOfKindFn<Error>;
export declare const FunctionUnavailableError: import('error-kid').CustomErrorClass<[message?: string | undefined]>, isFunctionNotAvailableError: import('error-kid').IsErrorOfKindFn<Error>;
export declare const InvalidArgumentsError: import('error-kid').CustomErrorClass<[message: string, cause?: unknown]>, isInvalidArguments: import('error-kid').IsErrorOfKindFn<Error>;
export declare const ConcurrentCallError: import('error-kid').CustomErrorClass<[message: string]>, isConcurrentCallError: import('error-kid').IsErrorOfKindFn<Error>;
export declare const SetEmojiStatusError: import('error-kid').CustomErrorClass<[error: string]>, isSetEmojiStatusError: import('error-kid').IsErrorOfKindFn<Error>;
export declare const AccessDeniedError: import('error-kid').CustomErrorClass<[message: string]>, isAccessDeniedError: import('error-kid').IsErrorOfKindFn<Error>;
export declare const FullscreenFailedError: import('error-kid').CustomErrorClass<[message: string]>, isFullscreenFailedError: import('error-kid').IsErrorOfKindFn<Error>;
